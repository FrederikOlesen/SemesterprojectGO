package presentation;

import domain.*;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class GUIAdministration extends javax.swing.JFrame {

    /**
     * Creates new form GUIAdministration
     */
    Control con = new Control();
    Customer k;
    Booking bo;
    ArrayList b;
    ArrayList ka;
    ArrayList id;
    ArrayList r;
    DefaultListModel dflCreate = new DefaultListModel();
    DefaultListModel dflBooking = new DefaultListModel();
    DefaultListModel dflRooms = new DefaultListModel();

    public GUIAdministration() {
        initComponents();
        jListRooms.setModel(dflRooms);
        jListBooking.setModel(dflBooking);
        jListCreate.setModel(dflCreate);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Fnamefield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Snamefield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Addressfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Countryfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Phonefield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Emailfield = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Travelagencycombobox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Bookbutton = new javax.swing.JButton();
        Undobutton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        Noofguestfield = new javax.swing.JTextField();
        Statuslabeldontchange = new javax.swing.JLabel();
        Clearfieldsbutton = new javax.swing.JButton();
        Statuslabel = new javax.swing.JLabel();
        jButtonAddCustomer = new javax.swing.JButton();
        jButtongetCustomer = new javax.swing.JButton();
        jTextFieldgetLastName = new javax.swing.JTextField();
        jTextFieldCustomerID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCreate = new javax.swing.JList();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldgetcustomerID = new javax.swing.JTextField();
        jButtonSearchCustomerID = new javax.swing.JButton();
        jTextFieldRoomNo = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jCheckBoxPaid = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jXDatePickerArrival = new org.jdesktop.swingx.JXDatePicker();
        jXDatePickerDeparture = new org.jdesktop.swingx.JXDatePicker();
        jPanel2 = new javax.swing.JPanel();
        jButtongetArrivals = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListBooking = new javax.swing.JList();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldresNo = new javax.swing.JTextField();
        jbuttonGetArrivalsFromResNo = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jButtonEditBooking = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        noOfGuestsEditField = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jCheckBoxPaidBooking = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jXDatePickergetArrival = new org.jdesktop.swingx.JXDatePicker();
        jXDatePickergetDeparture = new org.jdesktop.swingx.JXDatePicker();
        jXDatePickerChangeArrival = new org.jdesktop.swingx.JXDatePicker();
        jXDatePickerChangeDeparture = new org.jdesktop.swingx.JXDatePicker();
        jLabel11 = new javax.swing.JLabel();
        jLabelStatusBooking = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButtonCheckRooms = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListRooms = new javax.swing.JList();
        jXDatePickercheckRoomArrival = new org.jdesktop.swingx.JXDatePicker();
        jXDatePickercheckRoomDeparture = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Forname");

        Fnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FnamefieldActionPerformed(evt);
            }
        });
        Fnamefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FnamefieldKeyTyped(evt);
            }
        });

        jLabel2.setText("Last name");

        Snamefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SnamefieldKeyTyped(evt);
            }
        });

        jLabel3.setText("Address");

        Addressfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressfieldActionPerformed(evt);
            }
        });
        Addressfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AddressfieldKeyTyped(evt);
            }
        });

        jLabel4.setText("Country");

        Countryfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CountryfieldKeyTyped(evt);
            }
        });

        jLabel5.setText("Phone");

        Phonefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhonefieldActionPerformed(evt);
            }
        });
        Phonefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PhonefieldKeyTyped(evt);
            }
        });

        jLabel6.setText("Email");

        Emailfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailfieldActionPerformed(evt);
            }
        });
        Emailfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EmailfieldKeyTyped(evt);
            }
        });

        jLabel7.setText("Arrival date");

        jLabel8.setText("Travel Agency");

        Travelagencycombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "BestTravel", "AwesomeAdventure", "DeluxeVacation", "Sun&Spa Agency" }));

        jLabel10.setText("Departure date");

        Bookbutton.setText("Book");
        Bookbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookbuttonActionPerformed(evt);
            }
        });

        Undobutton.setText("Undo Book");
        Undobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndobuttonActionPerformed(evt);
            }
        });

        jLabel12.setText("No. of Guests");

        Noofguestfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoofguestfieldActionPerformed(evt);
            }
        });
        Noofguestfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NoofguestfieldKeyTyped(evt);
            }
        });

        Statuslabeldontchange.setText("Status:");

        Clearfieldsbutton.setText("Clear Fields");
        Clearfieldsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearfieldsbuttonActionPerformed(evt);
            }
        });

        jButtonAddCustomer.setText("Create new customer");
        jButtonAddCustomer.setActionCommand("Create new Customer");
        jButtonAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCustomerActionPerformed(evt);
            }
        });

        jButtongetCustomer.setText("Search by Last Name");
        jButtongetCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongetCustomerActionPerformed(evt);
            }
        });

        jTextFieldgetLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldgetLastNameKeyTyped(evt);
            }
        });

        jTextFieldCustomerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCustomerIDKeyTyped(evt);
            }
        });

        jLabel13.setText("Customer ID");

        jLabel14.setText("Enter last name");

        jScrollPane1.setViewportView(jListCreate);

        jLabel24.setText("Enter CustomerID");

        jTextFieldgetcustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldgetcustomerIDActionPerformed(evt);
            }
        });
        jTextFieldgetcustomerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldgetcustomerIDKeyTyped(evt);
            }
        });

        jButtonSearchCustomerID.setText("Search by Customer ID");
        jButtonSearchCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCustomerIDActionPerformed(evt);
            }
        });

        jTextFieldRoomNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldRoomNoKeyTyped(evt);
            }
        });

        jLabel31.setText("Room Number");

        jCheckBoxPaid.setText("Paid");

        jXDatePickerArrival.setFormats(new String[] {"yyyy-MM-dd"});

        jXDatePickerDeparture.setFormats(new String[] { "yyyy-MM-dd" });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(Fnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Snamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(Addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAddCustomer)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Countryfield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Phonefield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldgetLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtongetCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldgetcustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(100, 100, 100)
                                        .addComponent(jButtonSearchCustomerID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel24)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Statuslabeldontchange)
                                .addGap(18, 18, 18)
                                .addComponent(Statuslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Travelagencycombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jTextFieldRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(54, 54, 54))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(127, 127, 127)
                                                .addComponent(jLabel31))
                                            .addComponent(jLabel8)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jXDatePickerArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jXDatePickerDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Clearfieldsbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Undobutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Bookbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jCheckBoxPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel12)
                                                .addComponent(Noofguestfield, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(305, 305, 305))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jTextFieldCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(326, 326, 326))))))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Snamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Countryfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phonefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAddCustomer)
                .addGap(9, 9, 9)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextFieldgetcustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchCustomerID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldgetLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtongetCustomer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel13)
                        .addComponent(jCheckBoxPaid)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Travelagencycombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bookbutton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Undobutton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Noofguestfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Clearfieldsbutton))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jXDatePickerArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXDatePickerDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Statuslabeldontchange)
                    .addComponent(Statuslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Create", jPanel1);

        jButtongetArrivals.setText("Get bookings");
        jButtongetArrivals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongetArrivalsActionPerformed(evt);
            }
        });

        jLabel15.setText("Arrival");

        jLabel16.setText("Departure");

        jScrollPane2.setViewportView(jListBooking);

        jLabel17.setText("Arrival");

        jLabel18.setText("Departure");

        jLabel19.setText("Customer ID");

        jLabel20.setText("Payment");

        jLabel21.setText("Room no.");

        jLabel22.setText("Guests");

        jLabel23.setText("Res no.");

        jTextFieldresNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldresNoKeyTyped(evt);
            }
        });

        jbuttonGetArrivalsFromResNo.setText("Get booking");
        jbuttonGetArrivalsFromResNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonGetArrivalsFromResNoActionPerformed(evt);
            }
        });

        jLabel27.setText("Res.No");

        jButtonEditBooking.setText("Select booking");
        jButtonEditBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditBookingActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        noOfGuestsEditField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfGuestsEditFieldActionPerformed(evt);
            }
        });

        jLabel28.setText("Arrival");

        jLabel29.setText("Departure");

        jLabel30.setText("No. of Guests");

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jCheckBoxPaidBooking.setText("Paid");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jXDatePickergetArrival.setFormats(new String[] {"yyyy-MM-dd"});
        jXDatePickergetArrival.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jXDatePickergetArrivalKeyTyped(evt);
            }
        });

        jXDatePickergetDeparture.setFormats(new String[] {"yyyy-MM-dd"});

        jXDatePickerChangeArrival.setFormats(new String[] {"yyyy-MM-dd"});

        jXDatePickerChangeDeparture.setFormats(new String[] {"yyyy-MM-dd"});

        jLabel11.setText("Status:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel21))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jXDatePickergetArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(27, 27, 27))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jLabel15)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel16)
                                                    .addComponent(jXDatePickergetDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(46, 46, 46))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jButtongetArrivals, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel27)
                                            .addComponent(jTextFieldresNo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jbuttonGetArrivalsFromResNo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel20)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEditBooking))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28)
                            .addComponent(jXDatePickerChangeArrival, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXDatePickerChangeDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel30))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(noOfGuestsEditField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jCheckBoxPaidBooking)))
                        .addGap(297, 297, 297))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelStatusBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(14, 14, 14)
                                .addComponent(jTextFieldresNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jXDatePickergetArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jXDatePickergetDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbuttonGetArrivalsFromResNo)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jButtongetArrivals))))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jButtonEditBooking)
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noOfGuestsEditField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxPaidBooking)
                    .addComponent(jXDatePickerChangeArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePickerChangeDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(jButtonDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelStatusBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        jTabbedPane1.addTab("Booking list", jPanel2);

        jButtonCheckRooms.setText("Check Rooms");
        jButtonCheckRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckRoomsActionPerformed(evt);
            }
        });

        jLabel25.setText("Arrival");

        jLabel26.setText("Departue");

        jScrollPane3.setViewportView(jListRooms);

        jXDatePickercheckRoomArrival.setFormats(new String[] {"yyyy-MM-dd"});

        jXDatePickercheckRoomDeparture.setFormats(new String[] {"yyyy-MM-dd"});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonCheckRooms, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jXDatePickercheckRoomArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jXDatePickercheckRoomDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(420, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePickercheckRoomArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePickercheckRoomDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jButtonCheckRooms)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(373, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Room list", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCheckRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckRoomsActionPerformed
        dflRooms.removeAllElements();
        if ("".equals(jXDatePickercheckRoomArrival.getEditor().getText()) || "".equals(jXDatePickercheckRoomDeparture.getEditor().getText())) {
            JOptionPane.showMessageDialog(rootPane, "Make sure both arrival and departure date are entered and in the correct format");
        } else {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            jXDatePickercheckRoomArrival.setFormats(dateFormat);
            jXDatePickercheckRoomDeparture.setFormats(dateFormat);
            String arrival = dateFormat.format(jXDatePickercheckRoomArrival.getDate()).toString();
            String departure = dateFormat.format(jXDatePickercheckRoomDeparture.getDate()).toString();
            r = con.getRoomsList(arrival, departure);
            if (r != null) {
                for (int i = 0; i < r.size(); i++) {
                    dflRooms.addElement(r.get(i).toString());
                }
            } else {
                Statuslabel.setText("Could not get Rooms");
            }
            con.resetRooms();
        }
    }//GEN-LAST:event_jButtonCheckRoomsActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        con.deleteBooking();
        boolean status = con.saveBooking();
        if (status) {
            jLabelStatusBooking.setText("Booking deleted");
        } else {
            jLabelStatusBooking.setText("Booking could not be deleted");
        }

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        //Check 
        if ("".equals(jXDatePickerChangeArrival.getEditor().getText()) || "".equals(jXDatePickerChangeDeparture.getEditor().getText())) {
            JOptionPane.showMessageDialog(rootPane, "Make sure both arrival and departure date are entered and in the correct format");
        } else {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = new Date();
            jXDatePickerChangeArrival.setFormats(dateFormat);
            jXDatePickerChangeDeparture.setFormats(dateFormat);
            String arrival = dateFormat.format(jXDatePickerChangeArrival.getDate()).toString();
            String departure = dateFormat.format(jXDatePickerChangeDeparture.getDate()).toString();
            int numberOfGuests = Integer.parseInt(noOfGuestsEditField.getText());
            int paid = 0;
            if (jCheckBoxPaidBooking.isSelected() == true) {
                paid = 1;
            }
            //If statements to control that inputs are valid
            if (Integer.parseInt(noOfGuestsEditField.getText()) <= 5 && Integer.parseInt(noOfGuestsEditField.getText()) > 0) {
                if (jXDatePickerChangeArrival.getDate().after(date)) {
                    if (jXDatePickerChangeDeparture.getDate().after(jXDatePickerChangeArrival.getDate())) {
                        bo = con.changeBookingInformation(arrival, departure, numberOfGuests, paid);
                        boolean status = con.saveBooking();
                        if (status) {
                            jLabelStatusBooking.setText("Booking updated!");
                        } else {
                            jLabelStatusBooking.setText("Booking could not be updated!");
                        }
                        con.resetBooking();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Make sure arrival date is before departure date");
                        Statuslabel.setText("Booking not updated!");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Make sure arrival date is after todays date");
                    Statuslabel.setText("Booking not updated!");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid number of guests - check your input");
                Statuslabel.setText("Booking not updated!");
            }

            //Clears the jListBooking
            DefaultListModel model = new DefaultListModel();
            jListBooking.setModel(model);
            model.clear();
        }
        con.resetBooking();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void jButtonEditBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditBookingActionPerformed
        Object booking = jListBooking.getSelectedValue();
        try {
            Date arrival = new SimpleDateFormat("yyyy-MM-dd").parse(booking.toString().substring(0, 10));
            jXDatePickerChangeArrival.setDate(arrival);
            Date departure = new SimpleDateFormat("yyyy-MM-dd").parse(booking.toString().substring(20, 30));
            jXDatePickerChangeDeparture.setDate(departure);
        } catch (ParseException pe) {
            System.out.println("Failed in GUI");
        }
        noOfGuestsEditField.setText(booking.toString().substring(40, 41));
    }//GEN-LAST:event_jButtonEditBookingActionPerformed

    private void jbuttonGetArrivalsFromResNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonGetArrivalsFromResNoActionPerformed
        if ("".equals(jTextFieldresNo.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Wrong input");
            System.out.println(jTextFieldresNo.getText());
        } else {
            dflBooking.removeAllElements();
            int resno = Integer.parseInt(jTextFieldresNo.getText());
            Booking arrival = con.findResNumber(resno);
            if (arrival != null) {
                dflBooking.addElement(arrival);
            } else {
                jLabelStatusBooking.setText("Could not find booking");
            }
        }
    }//GEN-LAST:event_jbuttonGetArrivalsFromResNoActionPerformed

    private void jButtongetArrivalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongetArrivalsActionPerformed
        if ("".equals(jXDatePickergetArrival.getEditor().getText()) || "".equals(jXDatePickergetDeparture.getEditor().getText())) {
            JOptionPane.showMessageDialog(rootPane, "Make sure both arrival and departure date are entered and in the correct format");
        } else {
            if (jXDatePickergetArrival.getDate().before(jXDatePickergetDeparture.getDate())) {
                dflBooking.removeAllElements();
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                jXDatePickergetArrival.setFormats(dateFormat);
                jXDatePickergetDeparture.setFormats(dateFormat);
                String arrival = dateFormat.format(jXDatePickergetArrival.getDate()).toString();
                String departure = dateFormat.format(jXDatePickergetDeparture.getDate()).toString();

                b = con.getBookingList(arrival, departure);
                if (!b.isEmpty()) {

                    for (int i = 0; i < b.size(); i++) {
                        dflBooking.addElement(b.get(i).toString());
                    }
                } else {
                    jLabelStatusBooking.setText("Could not get bookings!");
                }
                con.resetBooking();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Make sure arrival date is before departure date");
            }
        }
    }//GEN-LAST:event_jButtongetArrivalsActionPerformed

    private void jButtonSearchCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCustomerIDActionPerformed
        dflCreate.removeAllElements();
        String customerID = jTextFieldgetcustomerID.getText();
        id = con.getCustomerID(customerID);
        if (id != null) {
            for (int i = 0; i < id.size(); i++) {
                dflCreate.addElement(id.get(i).toString());
            }
        } else {
            Statuslabel.setText("Could not get Customer");

        }
        con.resetCustomer();
        jTextFieldgetcustomerID.setText("");
    }//GEN-LAST:event_jButtonSearchCustomerIDActionPerformed

    private void jTextFieldgetcustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldgetcustomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldgetcustomerIDActionPerformed

    private void jButtongetCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongetCustomerActionPerformed
        dflCreate.removeAllElements();
        String lname = jTextFieldgetLastName.getText();
        ka = con.getCustomer(lname);
        if (ka != null) {
            for (int i = 0; i < ka.size(); i++) {
                dflCreate.addElement(ka.get(i).toString());
            }
        } else {
            Statuslabel.setText("Could not get Customer");
        }
        con.resetCustomer();
        jTextFieldgetLastName.setText("");
    }//GEN-LAST:event_jButtongetCustomerActionPerformed

    private void jButtonAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCustomerActionPerformed

        if ("".equals(Fnamefield.getText()) || "".equals(Snamefield.getText()) || "".equals(Countryfield.getText())
                || "".equals(Emailfield.getText()) || "".equals(Phonefield.getText()) || "".equals(Addressfield.getText())) {
            JOptionPane.showMessageDialog(rootPane, "One or more fields are left empty. Please make sure all fields are filled properly");
        } else {

            con.createNewCustomer(Fnamefield.getText(), Snamefield.getText(), Countryfield.getText(), Emailfield.getText(),
                    Integer.parseInt(Phonefield.getText()), Addressfield.getText());

            boolean status = con.saveCustomer();
            if (status) {
                Statuslabel.setText("Customer saved");
            } else {
                Statuslabel.setText("Customer could not be saved!");
            }
        }
    }//GEN-LAST:event_jButtonAddCustomerActionPerformed

    private void ClearfieldsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearfieldsbuttonActionPerformed
        Fnamefield.setText("");
        Snamefield.setText("");
        jXDatePickerArrival.setDate(null);
        Addressfield.setText("");
        Countryfield.setText("");
        jXDatePickerDeparture.setDate(null);
        Phonefield.setText("");
        Emailfield.setText("");
        Noofguestfield.setText("");
        Statuslabel.setText("");
        jTextFieldCustomerID.setText("");
        jTextFieldgetLastName.setText("");

        con.resetBooking();
    }//GEN-LAST:event_ClearfieldsbuttonActionPerformed

    private void BookbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookbuttonActionPerformed
        if ("".equals(jXDatePickerArrival.getEditor().getText()) || "".equals(jXDatePickerDeparture.getEditor().getText())) {
            JOptionPane.showMessageDialog(rootPane, "Make sure both arrival and departure date are entered and in the correct format");
        } else {
            int CustomerID = Integer.parseInt(jTextFieldCustomerID.getText());
            int paid = 0;
            if (jCheckBoxPaid.isSelected() == true) {
                paid = 1;
            }
            Date date = new Date();
            if (Integer.parseInt(jTextFieldRoomNo.getText()) <= 15 && Integer.parseInt(jTextFieldRoomNo.getText()) > 0) {
                if (Integer.parseInt(Noofguestfield.getText()) <= 5 && Integer.parseInt(Noofguestfield.getText()) > 0) {
                    if (jXDatePickerArrival.getDate().after(date)) {
                        if (jXDatePickerDeparture.getDate().after(jXDatePickerArrival.getDate())) {
                            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                            jXDatePickerArrival.setFormats(dateFormat);
                            jXDatePickerDeparture.setFormats(dateFormat);
                            String arrival = dateFormat.format(jXDatePickerArrival.getDate()).toString();
                            String departure = dateFormat.format(jXDatePickerDeparture.getDate()).toString();
                            con.createNewBooking(arrival, departure, Integer.parseInt(Noofguestfield.getText()), paid, Integer.parseInt(jTextFieldRoomNo.getText()), CustomerID);
                            boolean status = con.saveBooking();
                            if (status) {
                                Statuslabel.setText("Booking saved");
                            } else {
                                Statuslabel.setText("Booking could not be saved");
                            }

                            con.resetBooking();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Make sure arrival date is before departure date");
                            Statuslabel.setText("Booking not saved!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Make sure arrival date is after todays date");
                        Statuslabel.setText("Booking not saved!");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Invalid number of guests - check your input");
                    Statuslabel.setText("Booking not saved!");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid room number - check your input");
                Statuslabel.setText("Booking not saved!");
            }
        }
    }//GEN-LAST:event_BookbuttonActionPerformed

    private void EmailfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailfieldActionPerformed

    private void PhonefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhonefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhonefieldActionPerformed

    private void AddressfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressfieldActionPerformed

    private void FnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FnamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FnamefieldActionPerformed

    private void PhonefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PhonefieldKeyTyped
        char c = evt.getKeyChar();
        if ((!Character.isDigit(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_PhonefieldKeyTyped

    private void FnamefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FnamefieldKeyTyped
        char c = evt.getKeyChar();
        if ((Character.isDigit(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FnamefieldKeyTyped

    private void SnamefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SnamefieldKeyTyped
        char c = evt.getKeyChar();
        if ((Character.isDigit(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_SnamefieldKeyTyped

    private void AddressfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddressfieldKeyTyped

    }//GEN-LAST:event_AddressfieldKeyTyped

    private void CountryfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CountryfieldKeyTyped
        char c = evt.getKeyChar();
        if ((Character.isDigit(c)) || (c == KeyEvent.VK_SPACE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_CountryfieldKeyTyped

    private void EmailfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailfieldKeyTyped
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_SPACE) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_EmailfieldKeyTyped

    private void jTextFieldgetcustomerIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldgetcustomerIDKeyTyped
        char c = evt.getKeyChar();
        if ((!Character.isDigit(c)) || (c == KeyEvent.VK_SPACE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldgetcustomerIDKeyTyped

    private void jTextFieldgetLastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldgetLastNameKeyTyped
        char c = evt.getKeyChar();
        if ((Character.isDigit(c)) || (c == KeyEvent.VK_SPACE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldgetLastNameKeyTyped

    private void jTextFieldRoomNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRoomNoKeyTyped
        char c = evt.getKeyChar();
        if ((!Character.isDigit(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldRoomNoKeyTyped

    private void jTextFieldCustomerIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCustomerIDKeyTyped
        char c = evt.getKeyChar();
        if ((!Character.isDigit(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldCustomerIDKeyTyped

    private void UndobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UndobuttonActionPerformed

    private void NoofguestfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoofguestfieldKeyTyped
        char c = evt.getKeyChar();
        if ((!Character.isDigit(c)) ||  c == KeyEvent.VK_SPACE) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_NoofguestfieldKeyTyped

    private void NoofguestfieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_NoofguestfieldActionPerformed
    {//GEN-HEADEREND:event_NoofguestfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NoofguestfieldActionPerformed

    private void noOfGuestsEditFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfGuestsEditFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfGuestsEditFieldActionPerformed

    private void jTextFieldresNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldresNoKeyTyped
        char c = evt.getKeyChar();
        if ((!Character.isDigit(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldresNoKeyTyped

    private void jXDatePickergetArrivalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXDatePickergetArrivalKeyTyped

    }//GEN-LAST:event_jXDatePickergetArrivalKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIAdministration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIAdministration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIAdministration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAdministration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIAdministration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Addressfield;
    private javax.swing.JButton Bookbutton;
    private javax.swing.JButton Clearfieldsbutton;
    private javax.swing.JTextField Countryfield;
    private javax.swing.JTextField Emailfield;
    private javax.swing.JTextField Fnamefield;
    private javax.swing.JTextField Noofguestfield;
    private javax.swing.JTextField Phonefield;
    private javax.swing.JTextField Snamefield;
    private javax.swing.JLabel Statuslabel;
    private javax.swing.JLabel Statuslabeldontchange;
    private javax.swing.JComboBox Travelagencycombobox;
    private javax.swing.JButton Undobutton;
    private javax.swing.JButton jButtonAddCustomer;
    private javax.swing.JButton jButtonCheckRooms;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEditBooking;
    private javax.swing.JButton jButtonSearchCustomerID;
    private javax.swing.JButton jButtongetArrivals;
    private javax.swing.JButton jButtongetCustomer;
    private javax.swing.JCheckBox jCheckBoxPaid;
    private javax.swing.JCheckBox jCheckBoxPaidBooking;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelStatusBooking;
    private javax.swing.JList jListBooking;
    private javax.swing.JList jListCreate;
    private javax.swing.JList jListRooms;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldCustomerID;
    private javax.swing.JTextField jTextFieldRoomNo;
    private javax.swing.JTextField jTextFieldgetLastName;
    private javax.swing.JTextField jTextFieldgetcustomerID;
    private javax.swing.JTextField jTextFieldresNo;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerArrival;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerChangeArrival;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerChangeDeparture;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerDeparture;
    private org.jdesktop.swingx.JXDatePicker jXDatePickercheckRoomArrival;
    private org.jdesktop.swingx.JXDatePicker jXDatePickercheckRoomDeparture;
    private org.jdesktop.swingx.JXDatePicker jXDatePickergetArrival;
    private org.jdesktop.swingx.JXDatePicker jXDatePickergetDeparture;
    private javax.swing.JButton jbuttonGetArrivalsFromResNo;
    private javax.swing.JTextField noOfGuestsEditField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
